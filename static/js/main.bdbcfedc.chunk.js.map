{"version":3,"sources":["static-data.js","containers/user.js","components/sidebar.js","components/empty.js","containers/chatWindow.js","components/main.js","reducers/index.js","reducers/user.js","reducers/contacts.js","reducers/activeUserId.js","store/index.js","containers/App.js","index.js"],"names":["numberOfUsers","User","_ref","user","name","profile_pic","status","react_default","a","createElement","className","src","alt","Sidebar","contacts","map","contact","src_containers_user","key","user_id","Empty","first_name","split","ChatWindow","activeUserId","Main","chatWindow","components_empty","shortid","require","txtgen","faker","_","users","Array","from","length","generateUser","mapKeys","messagesPerUser","messages","forEach","numberOfMsgs","Object","objectSpread","v","i","number","text","sentence","is_user_msg","random","boolean","getMessages","findName","email","internet","avatar","generate","combineReducers","state","arguments","undefined","store","createStore","reducer","App","_store$getState","getState","components_sidebar","values","components_main","render","console","log","ReactDOM","src_containers_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.bdbcfedc.chunk.js","sourcesContent":["const shortid = require(\"shortid\"); // shortid.generate() returns a unique \"short\" id\r\nconst txtgen = require(\"txtgen\"); // txtgen.sentence() returns random \"readable\" sentences\r\nconst faker = require(\"faker\"); // faker is used for generating random fake data.\r\nconst _ = require(\"lodash\"); // lodash is a utility lib for Javascript\r\n\r\nconst users = generateUsers(10);\r\nexport const contacts = _.mapKeys(users, \"user_id\");\r\nexport const getMessages = messagesPerUser => {\r\n  let messages = {};\r\n  _.forEach(users, user => {\r\n    messages[user.user_id] = {\r\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\")\r\n    };\r\n  });\r\n  return messages;\r\n};\r\n\r\n// just an example of how the state object is structured\r\nexport const state = {\r\n  user: generateUser(),\r\n  messages: getMessages(10),\r\n  typing: \"\",\r\n  contacts,\r\n  activeUserId: null\r\n};\r\n\r\n/**\r\n * @returns {Object} - a new user object\r\n */\r\nexport function generateUser() {\r\n  return {\r\n    name: faker.name.findName(),\r\n    email: faker.internet.email(),\r\n    profile_pic: faker.internet.avatar(),\r\n    status: txtgen.sentence(),\r\n    user_id: shortid.generate()\r\n  };\r\n}\r\n/**\r\n * @returns {Object} - a new message object\r\n */\r\nfunction generateMsg(number) {\r\n  return {\r\n    number,\r\n    text: txtgen.sentence(),\r\n    is_user_msg: faker.random.boolean()\r\n  };\r\n}\r\n/**\r\n *\r\n * @param {Number} numberOfUsers - the number of users to be generated\r\n * @param {Function} generateUser - function that generates a single user\r\n * @returns {Array} - an array of user objects with length n = numberOfUsers\r\n */\r\nfunction generateUsers(numberOfUsers) {\r\n  return Array.from({ length: numberOfUsers }, () => generateUser());\r\n}\r\n\r\nfunction generateMsgs(numberOfMsgs) {\r\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\r\n}","import React from \"react\";\r\nimport \"./user.css\";\r\n\r\nconst User = ({ user }) => {\r\n  const { name, profile_pic, status } = user;\r\n\r\n  return (\r\n    <div className=\"User\">\r\n      <img src={profile_pic} alt={name} className=\"User__pic\" />\r\n      <div className=\"User__details\">\r\n        <p className=\"User__details-name\">{name}</p>\r\n        <p className=\"User__details-status\">{status}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport User from \"../containers/user\"; \r\nimport \"./sidebar.css\";\r\n\r\nconst Sidebar = ({ contacts }) => {\r\n  return (\r\n    <aside className=\"Sidebar\">\r\n      {contacts.map(contact => <User user={contact} key={contact.user_id} />)}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport \"./empty.css\";\r\n\r\nconst Empty = ({ user }) => {\r\n  const { name, profile_pic, status } = user;\r\n  const first_name = name.split(\" \")[0];\r\n\r\n  return (\r\n    <div className=\"Empty\">\r\n      <h1 className=\"Empty__name\">Welcome, {first_name} </h1>\r\n      <img src={profile_pic} alt={name} className=\"Empty__img\" />\r\n      <p className=\"Empty__status\">\r\n        <b>Status:</b> {status}\r\n      </p>\r\n      <button className=\"Empty__btn\">Start a conversation</button>\r\n      <p className=\"Empty__info\">\r\n        Search for someone to start chatting with or go to Contacts to see who\r\n        is available\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Empty;","import React from \"react\";\r\n\r\nconst ChatWindow = ({ activeUserId }) => {\r\n  return (\r\n    <div className=\"ChatWindow\">Conversation for user id: {activeUserId}</div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;","import React from \"react\";\r\nimport \"./main.css\";\r\nimport Empty from \"../components/empty\";\r\nimport ChatWindow from \"../containers/chatWindow\";\r\n\r\nconst Main = ({ user, activeUserId }) => {\r\n  const renderMainContent = () => {\r\n    if (!activeUserId) {\r\n      return <Empty user={user} activeUserId={activeUserId} />;\r\n    } else {\r\n      return <ChatWindow activeUserId={activeUserId} />;\r\n    }\r\n  };\r\n  return <main className=\"Main\">{renderMainContent()}</main>;\r\n};\r\n\r\nexport default Main;","import user from \"./user\";\r\nimport contacts from \"./contacts\";\r\nimport activeUserId from \"./activeUserId\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n    user,\r\n    contacts,\r\n    activeUserId\r\n  });","import { generateUser } from \"../static-data\";\r\nexport default function user(state = generateUser(), action) {\r\n  return state;\r\n}","import { contacts } from \"../static-data\";\r\n\r\nexport default (state = contacts, action) => {\r\n  return state;\r\n};","export default function activeUserId(state = null, action) {\r\n    return state;\r\n  }","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers/\";\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport Sidebar from \"../components/sidebar\";\nimport Main from \"../components/main\";\nimport './App.css';\nimport store  from '../store';\nimport _ from 'lodash';\n\nconst App = () => {\n  const { contacts, user, activeUserId  } = store.getState();\n  return (\n    <div className=\"App\">\n      <Sidebar contacts={_.values(contacts)} />\n      <Main user={user} activeUserId={activeUserId} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n// import registerServiceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nconst render = () => {\n  fancyLog();\n  return ReactDOM.render(<App />, document.getElementById(\"root\"));\n};\n\nrender();\nstore.subscribe(render);\n// registerServiceWorker();\n\nfunction fancyLog() {\n  console.log(\"%c Rendered with ðŸ‘‰ ðŸ‘‰ðŸ‘‡\", \"background: purple; color: #fff\");\n  console.log(store.getState());\n}"],"sourceRoot":""}